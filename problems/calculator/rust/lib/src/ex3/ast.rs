///////////////////////////////////////////////////////////////////////////////
//---------------------------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////

#[derive(PartialEq, Clone)]
pub enum Ex {
    Val(Val),
    Infix(Box<Ex>, Bin, Box<Ex>),
    Neg(Box<Ex>),
    Fn(Fnc),
    Mat(Vec<Ex>),
    Invalid,
}

//---------------------------------------------------------------------------//

#[derive(PartialEq, Clone)]
pub enum Val {
    Num(Num),
    Var(String),
    Bool(bool),
    Tok(Tok),
}

//---------------------------------------------------------------------------//

#[derive(PartialEq, Clone, Copy)]
pub enum Num {
    Int(i32),
    Flt(f64),
}

//---------------------------------------------------------------------------//

#[derive(PartialEq, Clone)]
pub enum Bin {
    Op(Op),
    Rl(Rl),
}

//---------------------------------------------------------------------------//

#[derive(PartialEq, Clone)]
pub enum Op {
    Add,
    Sub,
    Mul,
    Div,
    Pow,
    Mod,
}

//---------------------------------------------------------------------------//

#[derive(PartialEq, Clone)]
pub enum Rl {
    Eqq,
    Ltt,
    Leq,
    Gtt,
    Geq,
    Neq,
    Where,
}

//---------------------------------------------------------------------------//

#[derive(PartialEq, Clone)]
pub enum Fnc {
    Ln(Box<Ex>),
    Sin(Box<Ex>),
    Cos(Box<Ex>),
    Tan(Box<Ex>),
}

//---------------------------------------------------------------------------//

#[derive(PartialEq, Clone)]
pub enum Tok {
    E,
    Pi,
    I,
    Inf,
}

///////////////////////////////////////////////////////////////////////////////
//---------------------------------------------------------------------------//
///////////////////////////////////////////////////////////////////////////////
